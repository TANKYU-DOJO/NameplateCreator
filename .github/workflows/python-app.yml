# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    tags: [ "v*" ]
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.os }}-latest

    strategy:
      matrix:
        os: [windows, macos, ubuntu]

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        check-latest: true

    - name: Install packages
      run: pip install python-pptx tkeasygui openpyxl

    - name: Build Executable
      uses: Nuitka/Nuitka-Action@main
      with:
        nuitka-version: main
        script-name: main.py
        standalone: true
        onefile: false
        enable-plugins: tk-inter

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }} Build
        path: build/main.dist
    
    - name: Create release
      id: create_release
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Archive Release
      uses: thedoctor0/zip-release@0.7.6
      if: startsWith(github.ref, 'refs/tags/')
      with:
        type: 'zip'
        filename: '${{ matrix.os }}.zip'
        directory: 'build/main.dist'

    - name: Upload Release Asset
      if: startsWith(github.ref, 'refs/tags/')
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ matrix.os }}.zip
        asset_name: ${{ matrix.os }}.zip
        asset_content_type: application/zip